name: Deploy Django app to EC2 using Ansible

on:
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
  TF_VAR_ami: ${{ secrets.TF_VAR_AMI }}
  TF_VAR_key_name: ${{ secrets.TF_VAR_KEY_NAME }}
  EC2_INSTANCE_USERNAME: ubuntu
  EC2_INSTANCE_PRIVATE_KEY: ${{ secrets.EC2_INSTANCE_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.4

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init \
            -backend-config="bucket=django-ansible-bucket" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="region=ap-northeast-1"

      - name: Plan Terraform
        id: plan
        run: |
          cd terraform
          terraform plan -out=plan.tfplan

      - name: Apply Terraform
        id: apply
        run: |
          cd terraform
          terraform apply -auto-approve plan.tfplan
        env:
          TF_CLI_AUTO_APPROVE: 1 

      - name: Get EC2 Public IP
        id: ec2-public-ip
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        run: |
          echo "::set-output name=public_ip::$(aws ec2 describe-instances --filters 'Name=instance-state-name,Values=running' --query 'Reservations[].Instances[].PublicIpAddress' --output text)"
             

      - name: Install Ansible on EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_INSTANCE_PRIVATE_KEY }}
          HOSTNAME: ${{ steps.ec2-public-ip.outputs.public_ip }}
          USER_NAME: ${{ env.EC2_INSTANCE_USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          sudo apt update
          sudo apt install -y software-properties-common
          sudo apt-add-repository --yes --update ppa:ansible/ansible
          sudo apt install -y ansible
          sudo apt-get install -y supervisor nginx
          sudo rm /etc/nginx/sites-enabled/default
          '
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3 
        
      - name: Deploy Django app using Ansible
        env:
          PRIVATE_KEY: ${{ secrets.EC2_INSTANCE_PRIVATE_KEY }}
          HOSTNAME: 13.113.84.108
          USER_NAME: ${{ env.EC2_INSTANCE_USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ansible-playbook -i ansible/inventory.ini ansible/playbook.yml -u ubuntu --private-key private_key -vvv

